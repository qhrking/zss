package com.zss.core.job;

import com.zss.biz.AppManager;
import com.zss.core.dal.entity.App;
import com.zss.core.plugin.ApplicationContextUtil;
import com.zss.core.util.DateUtils;
import com.zss.core.util.FileUtils;
import org.quartz.Job;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

/**
 * Created by qhrking on 2017/10/21.
 */
public class SitemapJob implements Job {

    static SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd'T'HH:ss:mm'Z'");

    @Override
    public void execute(JobExecutionContext jobExecutionContext) throws JobExecutionException {
        System.out.println("################网站地图定时更新任务##############");
        StringBuilder xmlBuilder = new StringBuilder();
        buildUrlsetHeader(xmlBuilder);
        String domain = "http://www.haoapp.mobi";
        AppManager appManager = ApplicationContextUtil.getBean(AppManager.class);
        List<App> apps = appManager.listBySitemap();
        if (apps != null && !apps.isEmpty()) {
            for (App app : apps) {
                String changefreq = "daily";
                String priority = "1.0";
                int dayDiff = DateUtils.getDayDiff(new Date(), app.getUpdateTime());
                if (dayDiff > 30) {
                    changefreq = "monthly";
                    priority = "0.3";
                } else if (dayDiff > 7) {
                    changefreq = "weekly";
                    priority = "0.9";
                }
                buildUrl(xmlBuilder, domain + "/app/"+app.getId(), format.format(app.getUpdateTime()), changefreq, priority);
            }
        }
        buildUrlsetFooter(xmlBuilder);
        try {
            FileUtils.createFile(new File("").getCanonicalPath(),"sitemap",xmlBuilder.toString(),"xml");
            System.out.println("创建sitemap.xml文件成功 ");
        } catch (IOException e) {
            System.out.println("创建sitemap.xml文件失败 "+ e.getMessage());
            e.printStackTrace();
        }
    }

    private void buildSitemapHeader(StringBuilder xmlBuilder) {
        buildHeader(xmlBuilder);
        xmlBuilder.append("<sitemapindex ");
        xmlBuilder.append(" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ");
        xmlBuilder.append(" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9\" ");
        xmlBuilder.append(" xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" ");
        xmlBuilder.append(" > ");
    }

    private void buildSitemapFooter(StringBuilder xmlBuilder) {
        xmlBuilder.append("</sitemapindex>");
        buildFooter(xmlBuilder);
    }

    private void buildUrlsetHeader(StringBuilder xmlBuilder) {
        buildHeader(xmlBuilder);
        xmlBuilder.append("<urlset");
        xmlBuilder.append(" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ");
        xmlBuilder.append(" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9\" ");
        xmlBuilder.append(" xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" ");
        xmlBuilder.append(" > ");
    }

    private void buildUrlsetFooter(StringBuilder xmlBuilder) {
        xmlBuilder.append("</urlset>");
        buildFooter(xmlBuilder);
    }

    private void buildHeader(StringBuilder xmlBuilder) {
        xmlBuilder.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    }

    private void buildFooter(StringBuilder xmlBuilder) {
        xmlBuilder.append("<!-- This sitemap was generated by JPress --> ");
    }

    private void buildSitemap(StringBuilder xmlBuilder, String loc, String lastmod) {
        xmlBuilder.append("<sitemap>");
        xmlBuilder.append("<loc>" + loc + "</loc>");
        xmlBuilder.append("<lastmod>" + lastmod + "</lastmod>");
        xmlBuilder.append("</sitemap>");
    }

    private void buildUrl(StringBuilder xmlBuilder, String loc, String lastmod, String changefreq, String priority) {
        xmlBuilder.append("<url>");
        xmlBuilder.append("<loc>" + loc + "</loc>");
        xmlBuilder.append("<lastmod>" + lastmod + "</lastmod>");
        xmlBuilder.append("<changefreq>" + changefreq + "</changefreq>");
        xmlBuilder.append("<priority>" + priority + "</priority>");
        xmlBuilder.append("</url>");
    }

}
